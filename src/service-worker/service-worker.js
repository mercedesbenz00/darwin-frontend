/**
 * Workbox - Production-ready service worker libraries and tooling.
 * https://developer.chrome.com/docs/workbox/
 *
 * Defines caching strategies for routes.
 */
import { clientsClaim } from 'workbox-core'
import { ExpirationPlugin } from 'workbox-expiration'
import { precacheAndRoute } from 'workbox-precaching'
import { registerRoute } from 'workbox-routing'
import { CacheFirst } from 'workbox-strategies'

clientsClaim()

/**
 * We are not wrapping it in a 'message' event as per the new update.
 * @see https://developers.google.com/web/tools/workbox/modules/workbox-core
 */
self.skipWaiting()

/**
 * Precache all of the assets generated by your build process.
 * Their URLs are injected into the manifest variable below.
 * This variable must be present somewhere in your service worker file,
 * even if you decide not to use precaching. See https://cra.link/PWA
 */
// Ignore it for now
// Builder needs __WB_MANIFEST to stay in use.
// And we don't want to cache files, yet
self.__WB_MANIFEST.filter((entry) => {
  return !(entry.url.endsWith('.js') || entry.url.endsWith('.css'))
})
precacheAndRoute([])

const A_WEEK = 7 * 24 * 60 * 60

const IMAGE_REGEX = /data\/teams\/\d+\/\w+\/.+\/uploads\/.+\?*/
registerRoute(
  ({ url }) => IMAGE_REGEX.test(url.toJSON()),
  new CacheFirst({
    cacheName: 'image-cache',
    plugins: [
      new ExpirationPlugin({
        maxAgeSeconds: A_WEEK
      })
    ]
  })
)

const IMAGE_SECTIONS_REGEX = /api\/v2\/teams\/.+\/items\/.+\/slots\/\d+\/sections\/get.*/
registerRoute(
  ({ url }) => IMAGE_SECTIONS_REGEX.test(url.toJSON()),
  new CacheFirst({
    cacheName: 'image-sections-cache',
    plugins: [
      new ExpirationPlugin({
        maxAgeSeconds: A_WEEK
      })
    ]
  })
)
