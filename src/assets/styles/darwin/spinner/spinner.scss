
@mixin mul-animation(
  $width: 80,
  $thickness: 6,
  $colors: ($colorPrimaryDark, $colorPrimaryLight, $colorPrimaryLight1)
) {
  $step: $thickness + 2;

  height: #{$width}px;
  width: #{$width}px;
  position: relative;

  .mul5circle1 {
    height: #{$width}px;
    width: #{$width}px;
    position: absolute;
    border-radius: 50%;
    border: #{$thickness}px solid nth($colors, 1);
    border-bottom-color: rgba(0,0,0,0);
    -webkit-animation: mul5circle1anim-#{$thickness} 3s infinite linear;
    animation: mul5circle1anim-#{$thickness} 3s infinite linear;
  }

  @keyframes mul5circle1anim-#{$thickness} {
    0% {
      -webkit-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    100% {
      -webkit-transform: rotate(360deg);
      transform: rotate(360deg);
    }
  }

  $width2: #{$width - $step * 2}px;
  $offset2: #{$step}px;

  .mul5circle2 {
    height: #{$width2};
    width: #{$width2};
    position: absolute;
    border-radius: 50%;
    border: #{$thickness}px solid nth($colors, 2);
    border-left-color: rgba(0,0,0,0);
    -webkit-animation: mul5circle2anim-#{$thickness} 4s infinite linear;
    animation: mul5circle2anim-#{$thickness} 4s infinite linear;
  }

  @keyframes mul5circle2anim-#{$thickness} {
    0% {
      -webkit-transform: translate($offset2, $offset2) rotate(0deg);
      transform: translate($offset2, $offset2) rotate(0deg);
    }
    100% {
      -webkit-transform: translate($offset2, $offset2) rotate(-360deg);
      transform: translate($offset2, $offset2) rotate(-360deg);
    }
  }

  $width3: #{$width - $step * 4}px;
  $offset3: #{$step * 2}px;

  .mul5circle3 {
    height: $width3;
    width: $width3;
    position: absolute;
    border-radius: 50%;
    border: #{$thickness}px solid nth($colors, 3);
    border-right-color: rgba(0,0,0,0);
    -webkit-animation: mul5circle3anim-#{$thickness} 5s infinite linear;
    animation: mul5circle3anim-#{$thickness} 5s infinite linear;
  }

  @keyframes mul5circle3anim-#{$thickness} {
    0% {
      -webkit-transform: translate($offset3, $offset3) rotate(0deg);
      transform: translate($offset3, $offset3) rotate(0deg);
    }
    100% {
      -webkit-transform: translate($offset3, $offset3) rotate(360deg);
      transform: translate($offset3, $offset3) rotate(360deg);
    }
  }
}

.v-loading {
  @include fullsize;
  @include col--center;
  visibility: hidden;
  position: absolute;
  color: black;
  z-index: var(--z-index-spinner);
  opacity: 0;
  transition: all 0.5s linear;

  div.mul5 {
    margin-bottom: 20px;
  }

  label {
    color: $colorSecondaryDark1;
    text-align: center;
  }
}

.v-loading--active {
  visibility: visible;
  opacity: 1;
}

.v-loading--large {
  &.v-loading--with-label {
    min-height: 150px;
  }

  div.mul5 {
    @include mul-animation(80, 8);
  }

  label {
    @include typography(lg, headlines);
  }
}

.v-loading--medium {
  &.v-loading--with-label {
    min-height: 100px;
  }

  div.mul5 {
    @include mul-animation(50, 6);
  }

  label {
    @include typography(md-1, headlines);
  }
}

.v-loading--small {
  &.v-loading--with-label {
    min-height: 80px;
  }

  div.mul5 {
    @include mul-animation(30, 3);
    margin-bottom: 10px;
  }

  label {
    @include typography(md, headlines);
  }
}

.v-loading--grey {
}

.v-loading--dark {
}
